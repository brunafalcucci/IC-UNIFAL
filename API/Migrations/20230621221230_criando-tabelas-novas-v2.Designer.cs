// <auto-generated />
using System;
using Application.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230621221230_criando-tabelas-novas-v2")]
    partial class criandotabelasnovasv2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Application.Models.AirCompressor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AirCompressorValue")
                        .HasColumnType("varchar")
                        .HasColumnName("AirCompressorValue");

                    b.Property<string>("Cleaning")
                        .HasColumnType("varchar")
                        .HasColumnName("Cleaning");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("InletPressureControl")
                        .HasColumnType("varchar")
                        .HasColumnName("InletPressureControl");

                    b.Property<string>("Local")
                        .HasColumnType("varchar")
                        .HasColumnName("Local");

                    b.Property<string>("Maintenance")
                        .HasColumnType("varchar")
                        .HasColumnName("Maintenance");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Moisture")
                        .HasColumnType("varchar")
                        .HasColumnName("Moisture");

                    b.Property<string>("Performance")
                        .HasColumnType("varchar")
                        .HasColumnName("Performance");

                    b.Property<string>("Temperature")
                        .HasColumnType("varchar")
                        .HasColumnName("Temperature");

                    b.Property<string>("Thermodynamics")
                        .HasColumnType("varchar")
                        .HasColumnName("Thermodynamics");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Use")
                        .HasColumnType("varchar")
                        .HasColumnName("Use");

                    b.HasKey("Id")
                        .HasName("pk_airCompressor");

                    b.ToTable("AirCompressor", (string)null);
                });

            modelBuilder.Entity("Application.Models.AirConditioning", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Acclimatized")
                        .HasColumnType("varchar")
                        .HasColumnName("Acclimatized");

                    b.Property<string>("AirConditioningValue")
                        .HasColumnType("varchar")
                        .HasColumnName("AirConditioningValue");

                    b.Property<string>("Cleaning")
                        .HasColumnType("varchar")
                        .HasColumnName("Cleaning");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Isolation")
                        .HasColumnType("varchar")
                        .HasColumnName("Isolation");

                    b.Property<string>("Maintenance")
                        .HasColumnType("varchar")
                        .HasColumnName("Maintenance");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Temperature")
                        .HasColumnType("varchar")
                        .HasColumnName("Temperature");

                    b.Property<string>("Thermodynamics")
                        .HasColumnType("varchar")
                        .HasColumnName("Thermodynamics");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id")
                        .HasName("pk_airConditioning");

                    b.ToTable("AirConditioning", (string)null);
                });

            modelBuilder.Entity("Application.Models.Boiler", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BoilerValue")
                        .HasColumnType("varchar")
                        .HasColumnName("BoilerValue");

                    b.Property<string>("Condensed")
                        .HasColumnType("varchar")
                        .HasColumnName("Condensed");

                    b.Property<string>("Heat")
                        .HasColumnType("varchar")
                        .HasColumnName("Heat");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Inspection")
                        .HasColumnType("varchar")
                        .HasColumnName("Inspection");

                    b.Property<string>("Maintenance")
                        .HasColumnType("varchar")
                        .HasColumnName("Maintenance");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Performance")
                        .HasColumnType("varchar")
                        .HasColumnName("Performance");

                    b.Property<string>("Place")
                        .HasColumnType("varchar")
                        .HasColumnName("Place");

                    b.Property<string>("Pressure")
                        .HasColumnType("varchar")
                        .HasColumnName("Pressure");

                    b.Property<string>("StudiesAndMeasures")
                        .HasColumnType("varchar")
                        .HasColumnName("StudiesAndMeasures");

                    b.Property<string>("Thermodynamics")
                        .HasColumnType("varchar")
                        .HasColumnName("Thermodynamics");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id")
                        .HasName("pk_boiler");

                    b.ToTable("Boiler", (string)null);
                });

            modelBuilder.Entity("Application.Models.ChemicalTreatment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AlterRawMaterialForLessEmission")
                        .HasColumnType("varchar")
                        .HasColumnName("AlterRawMaterialForLessEmission");

                    b.Property<string>("AvoidExcessSolventByOperators")
                        .HasColumnType("varchar")
                        .HasColumnName("AvoidExcessSolventByOperators");

                    b.Property<string>("BurnWastePaperToGenerateHeat")
                        .HasColumnType("varchar")
                        .HasColumnName("BurnWastePaperToGenerateHeat");

                    b.Property<string>("BurningOfHeatWoodByProducts")
                        .HasColumnType("varchar")
                        .HasColumnName("BurningOfHeatWoodByProducts");

                    b.Property<string>("CWP")
                        .HasColumnType("varchar")
                        .HasColumnName("CWP");

                    b.Property<string>("CheapWasteRemoval")
                        .HasColumnType("varchar")
                        .HasColumnName("CheapWasteRemoval");

                    b.Property<string>("ChemicalTreatmentValue")
                        .HasColumnType("varchar")
                        .HasColumnName("ChemicalTreatmentValue");

                    b.Property<string>("Cleaning")
                        .HasColumnType("varchar")
                        .HasColumnName("Cleaning");

                    b.Property<string>("ConversionOfLiquidMaterialsForCleaning")
                        .HasColumnType("varchar")
                        .HasColumnName("ConversionOfLiquidMaterialsForCleaning");

                    b.Property<string>("ConvertHydrocarbonCleanersToLessToxicOnes")
                        .HasColumnType("varchar")
                        .HasColumnName("ConvertHydrocarbonCleanersToLessToxicOnes");

                    b.Property<string>("DecreaseContaminationOfEndPieces")
                        .HasColumnType("varchar")
                        .HasColumnName("DecreaseContaminationOfEndPieces");

                    b.Property<string>("DecreaseSteamLosses")
                        .HasColumnType("varchar")
                        .HasColumnName("DecreaseSteamLosses");

                    b.Property<string>("DevelopmentOfSpentSolutionsToTheManufacturer")
                        .HasColumnType("varchar")
                        .HasColumnName("DevelopmentOfSpentSolutionsToTheManufacturer");

                    b.Property<string>("DirectWasteGasesToTheBoiler")
                        .HasColumnType("varchar")
                        .HasColumnName("DirectWasteGasesToTheBoiler");

                    b.Property<string>("Distillation")
                        .HasColumnType("varchar")
                        .HasColumnName("Distillation");

                    b.Property<string>("DistilledWaterRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("DistilledWaterRecycling");

                    b.Property<string>("DryAllPartsOfTheWaterSeparator")
                        .HasColumnType("varchar")
                        .HasColumnName("DryAllPartsOfTheWaterSeparator");

                    b.Property<string>("Emissions")
                        .HasColumnType("varchar")
                        .HasColumnName("Emissions");

                    b.Property<string>("Employees")
                        .HasColumnType("varchar")
                        .HasColumnName("Employees");

                    b.Property<string>("EquipmentCleaningTreatmentAndReuse")
                        .HasColumnType("varchar")
                        .HasColumnName("EquipmentCleaningTreatmentAndReuse");

                    b.Property<string>("FilmRecyclingForSilverReuse")
                        .HasColumnType("varchar")
                        .HasColumnName("FilmRecyclingForSilverReuse");

                    b.Property<string>("FinishIndustrialProcessWithWaterBasedProduct")
                        .HasColumnType("varchar")
                        .HasColumnName("FinishIndustrialProcessWithWaterBasedProduct");

                    b.Property<string>("FloatingLidsOnMaterialTanks")
                        .HasColumnType("varchar")
                        .HasColumnName("FloatingLidsOnMaterialTanks");

                    b.Property<string>("Flocculation")
                        .HasColumnType("varchar")
                        .HasColumnName("Flocculation");

                    b.Property<string>("FoundryAreaRecovery")
                        .HasColumnType("varchar")
                        .HasColumnName("FoundryAreaRecovery");

                    b.Property<string>("FoundrySandRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("FoundrySandRecycling");

                    b.Property<string>("General")
                        .HasColumnType("varchar")
                        .HasColumnName("General");

                    b.Property<string>("HeatGeneration")
                        .HasColumnType("varchar")
                        .HasColumnName("HeatGeneration");

                    b.Property<string>("HydraulicOilReuse")
                        .HasColumnType("varchar")
                        .HasColumnName("HydraulicOilReuse");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("InorganicSolutions")
                        .HasColumnType("varchar")
                        .HasColumnName("InorganicSolutions");

                    b.Property<string>("InstallationOfDisposalEquipment")
                        .HasColumnType("varchar")
                        .HasColumnName("InstallationOfDisposalEquipment");

                    b.Property<string>("InstallationOfIncineratorForSolidWaste")
                        .HasColumnType("varchar")
                        .HasColumnName("InstallationOfIncineratorForSolidWaste");

                    b.Property<string>("Liquid")
                        .HasColumnType("varchar")
                        .HasColumnName("Liquid");

                    b.Property<string>("Maintenance")
                        .HasColumnType("varchar")
                        .HasColumnName("Maintenance");

                    b.Property<string>("ManufacturersWornSolutions")
                        .HasColumnType("varchar")
                        .HasColumnName("ManufacturersWornSolutions");

                    b.Property<string>("MetalWorkingFluidReuse")
                        .HasColumnType("varchar")
                        .HasColumnName("MetalWorkingFluidReuse");

                    b.Property<string>("Metals")
                        .HasColumnType("varchar")
                        .HasColumnName("Metals");

                    b.Property<string>("Miscellaneous")
                        .HasColumnType("varchar")
                        .HasColumnName("Miscellaneous");

                    b.Property<string>("NonFerrousPowderRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("NonFerrousPowderRecycling");

                    b.Property<string>("NumberOfEmployeesForPartsWashing")
                        .HasColumnType("varchar")
                        .HasColumnName("NumberOfEmployeesForPartsWashing");

                    b.Property<string>("Oil")
                        .HasColumnType("varchar")
                        .HasColumnName("Oil");

                    b.Property<string>("Operation")
                        .HasColumnType("varchar")
                        .HasColumnName("Operation");

                    b.Property<string>("OtherMaterials")
                        .HasColumnType("varchar")
                        .HasColumnName("OtherMaterials");

                    b.Property<string>("PaperProductRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("PaperProductRecycling");

                    b.Property<string>("ProductsWithNeutralPH")
                        .HasColumnType("varchar")
                        .HasColumnName("ProductsWithNeutralPH");

                    b.Property<string>("RawMaterials")
                        .HasColumnType("varchar")
                        .HasColumnName("RawMaterials");

                    b.Property<string>("Recovery")
                        .HasColumnType("varchar")
                        .HasColumnName("Recovery");

                    b.Property<string>("RecoveryOfMetalsForReuse")
                        .HasColumnType("varchar")
                        .HasColumnName("RecoveryOfMetalsForReuse");

                    b.Property<string>("Recycle")
                        .HasColumnType("varchar")
                        .HasColumnName("Recycle");

                    b.Property<string>("Recycling")
                        .HasColumnType("varchar")
                        .HasColumnName("Recycling");

                    b.Property<string>("RecyclingOfInkAndCleaningSolventResidues")
                        .HasColumnType("varchar")
                        .HasColumnName("RecyclingOfInkAndCleaningSolventResidues");

                    b.Property<string>("RecyclingSpentTanningSolution")
                        .HasColumnType("varchar")
                        .HasColumnName("RecyclingSpentTanningSolution");

                    b.Property<string>("Reduction")
                        .HasColumnType("varchar")
                        .HasColumnName("Reduction");

                    b.Property<string>("RemovalOfSludgeFromEquipmentTanks")
                        .HasColumnType("varchar")
                        .HasColumnName("RemovalOfSludgeFromEquipmentTanks");

                    b.Property<string>("RemovingRollersFromCleaningMachines")
                        .HasColumnType("varchar")
                        .HasColumnName("RemovingRollersFromCleaningMachines");

                    b.Property<string>("ReplaceHeavyMetalReagentsWithNonHazardousOnes")
                        .HasColumnType("varchar")
                        .HasColumnName("ReplaceHeavyMetalReagentsWithNonHazardousOnes");

                    b.Property<string>("Restoration")
                        .HasColumnType("varchar")
                        .HasColumnName("Restoration");

                    b.Property<string>("RestorationLevel2")
                        .HasColumnType("varchar")
                        .HasColumnName("RestorationLevel2");

                    b.Property<string>("Reuse")
                        .HasColumnType("varchar")
                        .HasColumnName("Reuse");

                    b.Property<string>("ReuseLevel2")
                        .HasColumnType("varchar")
                        .HasColumnName("ReuseLevel2");

                    b.Property<string>("ReuseOfDistilledWaterInOtherApplications")
                        .HasColumnType("varchar")
                        .HasColumnName("ReuseOfDistilledWaterInOtherApplications");

                    b.Property<string>("ReuseOfPrintedPaperScrap")
                        .HasColumnType("varchar")
                        .HasColumnName("ReuseOfPrintedPaperScrap");

                    b.Property<string>("ReuseOfScrapGlass")
                        .HasColumnType("varchar")
                        .HasColumnName("ReuseOfScrapGlass");

                    b.Property<string>("ReuseOfScrapPlasticParts")
                        .HasColumnType("varchar")
                        .HasColumnName("ReuseOfScrapPlasticParts");

                    b.Property<string>("ReuseOfUsedAcidBaths")
                        .HasColumnType("varchar")
                        .HasColumnName("ReuseOfUsedAcidBaths");

                    b.Property<string>("ReuseOfUsedOil")
                        .HasColumnType("varchar")
                        .HasColumnName("ReuseOfUsedOil");

                    b.Property<string>("RubberProductRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("RubberProductRecycling");

                    b.Property<string>("SW")
                        .HasColumnType("varchar")
                        .HasColumnName("SW");

                    b.Property<string>("Sale")
                        .HasColumnType("varchar")
                        .HasColumnName("Sale");

                    b.Property<string>("SaleOfCombustibleWaste")
                        .HasColumnType("varchar")
                        .HasColumnName("SaleOfCombustibleWaste");

                    b.Property<string>("SaleOfRecyclerOil")
                        .HasColumnType("varchar")
                        .HasColumnName("SaleOfRecyclerOil");

                    b.Property<string>("SaleOfUsedSheetsForRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("SaleOfUsedSheetsForRecycling");

                    b.Property<string>("Sand")
                        .HasColumnType("varchar")
                        .HasColumnName("Sand");

                    b.Property<string>("Scraps")
                        .HasColumnType("varchar")
                        .HasColumnName("Scraps");

                    b.Property<string>("SeparationAndRecyclingOfScrapForFoundry")
                        .HasColumnType("varchar")
                        .HasColumnName("SeparationAndRecyclingOfScrapForFoundry");

                    b.Property<string>("SeparationOfMetalsForSaleForRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("SeparationOfMetalsForSaleForRecycling");

                    b.Property<string>("SludgeRemoval")
                        .HasColumnType("varchar")
                        .HasColumnName("SludgeRemoval");

                    b.Property<string>("Solid")
                        .HasColumnType("varchar")
                        .HasColumnName("Solid");

                    b.Property<string>("Solids")
                        .HasColumnType("varchar")
                        .HasColumnName("Solids");

                    b.Property<string>("Solutes")
                        .HasColumnType("varchar")
                        .HasColumnName("Solutes");

                    b.Property<string>("SolutesLevel2")
                        .HasColumnType("varchar")
                        .HasColumnName("SolutesLevel2");

                    b.Property<string>("Solutions")
                        .HasColumnType("varchar")
                        .HasColumnName("Solutions");

                    b.Property<string>("Solvent")
                        .HasColumnType("varchar")
                        .HasColumnName("Solvent");

                    b.Property<string>("SolventLevel2")
                        .HasColumnType("varchar")
                        .HasColumnName("SolventLevel2");

                    b.Property<string>("SolventReplacementForWaterBasedCuttingFluids")
                        .HasColumnType("varchar")
                        .HasColumnName("SolventReplacementForWaterBasedCuttingFluids");

                    b.Property<string>("Solvents")
                        .HasColumnType("varchar")
                        .HasColumnName("Solvents");

                    b.Property<string>("SteamMinimization")
                        .HasColumnType("varchar")
                        .HasColumnName("SteamMinimization");

                    b.Property<string>("Stopper")
                        .HasColumnType("varchar")
                        .HasColumnName("Stopper");

                    b.Property<string>("SubstituteHexavalentChromiumForTrivalent")
                        .HasColumnType("varchar")
                        .HasColumnName("SubstituteHexavalentChromiumForTrivalent");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Use")
                        .HasColumnType("varchar")
                        .HasColumnName("Use");

                    b.Property<string>("UseOfAqueousCleaningSystem")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfAqueousCleaningSystem");

                    b.Property<string>("UseOfDeionizedWaterToRinseParts")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfDeionizedWaterToRinseParts");

                    b.Property<string>("UseOfFittedLids")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfFittedLids");

                    b.Property<string>("UseOfFlocculantsToReduceSludge")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfFlocculantsToReduceSludge");

                    b.Property<string>("UseOfGreenhouseFilterToReduceSludge")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfGreenhouseFilterToReduceSludge");

                    b.Property<string>("UseOfHydraulicOilInTheIndustrialProcess")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfHydraulicOilInTheIndustrialProcess");

                    b.Property<string>("UseOfLessToxicAndVolatileSolvents")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfLessToxicAndVolatileSolvents");

                    b.Property<string>("UseOfMaterialsInRenewableContainers")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfMaterialsInRenewableContainers");

                    b.Property<string>("UseOfMaterialsWithLessEnergyUse")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfMaterialsWithLessEnergyUse");

                    b.Property<string>("UseOfPrecipitatingAgentsInWasteWaterTreatment")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfPrecipitatingAgentsInWasteWaterTreatment");

                    b.Property<string>("UseOfSandForOtherPurposes")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfSandForOtherPurposes");

                    b.Property<string>("UseOfSolventThatCanBeReused")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfSolventThatCanBeReused");

                    b.Property<string>("UseOfSoyBasedPaints")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfSoyBasedPaints");

                    b.Property<string>("UseOfSteamGasRecovery")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfSteamGasRecovery");

                    b.Property<string>("UseOfWaterBasedAdhesives")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfWaterBasedAdhesives");

                    b.Property<string>("UseOfWaterBasedPaints")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfWaterBasedPaints");

                    b.Property<string>("WasteDisposal")
                        .HasColumnType("varchar")
                        .HasColumnName("WasteDisposal");

                    b.Property<string>("WasteDisposalLevel2")
                        .HasColumnType("varchar")
                        .HasColumnName("WasteDisposalLevel2");

                    b.Property<string>("WasteOilBurning")
                        .HasColumnType("varchar")
                        .HasColumnName("WasteOilBurning");

                    b.Property<string>("Water")
                        .HasColumnType("varchar")
                        .HasColumnName("Water");

                    b.Property<string>("WaterBasedSubstitutes")
                        .HasColumnType("varchar")
                        .HasColumnName("WaterBasedSubstitutes");

                    b.Property<string>("WaterLevel2")
                        .HasColumnType("varchar")
                        .HasColumnName("WaterLevel2");

                    b.Property<string>("WhiteWater")
                        .HasColumnType("varchar")
                        .HasColumnName("WhiteWater");

                    b.HasKey("Id")
                        .HasName("pk_chemicalTreatment");

                    b.ToTable("ChemicalTreatment", (string)null);
                });

            modelBuilder.Entity("Application.Models.Condenser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Condensed")
                        .HasColumnType("varchar")
                        .HasColumnName("Condensed");

                    b.Property<string>("CondenserValue")
                        .HasColumnType("varchar")
                        .HasColumnName("CondenserValue");

                    b.Property<string>("Heat")
                        .HasColumnType("varchar")
                        .HasColumnName("Heat");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Isolation")
                        .HasColumnType("varchar")
                        .HasColumnName("Isolation");

                    b.Property<string>("Local")
                        .HasColumnType("varchar")
                        .HasColumnName("Local");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Pressure")
                        .HasColumnType("varchar")
                        .HasColumnName("Pressure");

                    b.Property<string>("Thermodynamics")
                        .HasColumnType("varchar")
                        .HasColumnName("Thermodynamics");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Ventilation")
                        .HasColumnType("varchar")
                        .HasColumnName("Ventilation");

                    b.HasKey("Id")
                        .HasName("pk_condenser");

                    b.ToTable("Condenser", (string)null);
                });

            modelBuilder.Entity("Application.Models.CoolingSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Air")
                        .HasColumnType("varchar")
                        .HasColumnName("Air");

                    b.Property<string>("ChillerWaste")
                        .HasColumnType("varchar")
                        .HasColumnName("ChillerWaste");

                    b.Property<string>("Cleaning")
                        .HasColumnType("varchar")
                        .HasColumnName("Cleaning");

                    b.Property<string>("Condenser")
                        .HasColumnType("varchar")
                        .HasColumnName("Condenser");

                    b.Property<string>("CoolingSystemValue")
                        .HasColumnType("varchar")
                        .HasColumnName("CoolingSystemValue");

                    b.Property<string>("Heat")
                        .HasColumnType("varchar")
                        .HasColumnName("Heat");

                    b.Property<string>("HeatTransferCooling")
                        .HasColumnType("varchar")
                        .HasColumnName("HeatTransferCooling");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Performance")
                        .HasColumnType("varchar")
                        .HasColumnName("Performance");

                    b.Property<string>("Pressure")
                        .HasColumnType("varchar")
                        .HasColumnName("Pressure");

                    b.Property<string>("Refrigeration")
                        .HasColumnType("varchar")
                        .HasColumnName("Refrigeration");

                    b.Property<string>("SystemOperationCooling")
                        .HasColumnType("varchar")
                        .HasColumnName("SystemOperationCooling");

                    b.Property<string>("Temperature")
                        .HasColumnType("varchar")
                        .HasColumnName("Temperature");

                    b.Property<string>("Thermodynamics")
                        .HasColumnType("varchar")
                        .HasColumnName("Thermodynamics");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Water")
                        .HasColumnType("varchar")
                        .HasColumnName("Water");

                    b.HasKey("Id")
                        .HasName("pk_coolingSystem");

                    b.ToTable("CoolingSystem", (string)null);
                });

            modelBuilder.Entity("Application.Models.CriticalityIndex", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activities")
                        .HasColumnType("varchar")
                        .HasColumnName("Activities");

                    b.Property<string>("AvailabilityOfRepairPersonnel")
                        .HasColumnType("varchar")
                        .HasColumnName("AvailabilityOfRepairPersonnel");

                    b.Property<string>("AvailabilityOfRequiredParts")
                        .HasColumnType("varchar")
                        .HasColumnName("AvailabilityOfRequiredParts");

                    b.Property<string>("AverageRepairTime")
                        .HasColumnType("varchar")
                        .HasColumnName("AverageRepairTime");

                    b.Property<string>("Corrective")
                        .HasColumnType("varchar")
                        .HasColumnName("Corrective");

                    b.Property<string>("CostsManagement")
                        .HasColumnType("varchar")
                        .HasColumnName("CostsManagement");

                    b.Property<string>("CriticalityIndexValue")
                        .HasColumnType("varchar")
                        .HasColumnName("CriticalityIndexValue");

                    b.Property<string>("ElectricityExpensives")
                        .HasColumnType("varchar")
                        .HasColumnName("ElectricityExpensives");

                    b.Property<string>("EnergyGeneration")
                        .HasColumnType("varchar")
                        .HasColumnName("EnergyGeneration");

                    b.Property<string>("EnergyUse")
                        .HasColumnType("varchar")
                        .HasColumnName("EnergyUse");

                    b.Property<string>("EnvironmentalQuality")
                        .HasColumnType("varchar")
                        .HasColumnName("EnvironmentalQuality");

                    b.Property<string>("EnvironmentalRisks")
                        .HasColumnType("varchar")
                        .HasColumnName("EnvironmentalRisks");

                    b.Property<string>("Governance")
                        .HasColumnType("varchar")
                        .HasColumnName("Governance");

                    b.Property<string>("IndustrialManagement")
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialManagement");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Instrumentation")
                        .HasColumnType("varchar")
                        .HasColumnName("Instrumentation");

                    b.Property<string>("Investiments")
                        .HasColumnType("varchar")
                        .HasColumnName("Investiments");

                    b.Property<string>("Maintenance")
                        .HasColumnType("varchar")
                        .HasColumnName("Maintenance");

                    b.Property<string>("ManagementStrategy")
                        .HasColumnType("varchar")
                        .HasColumnName("ManagementStrategy");

                    b.Property<string>("MeanTimeBetweenFailures")
                        .HasColumnType("varchar")
                        .HasColumnName("MeanTimeBetweenFailures");

                    b.Property<string>("No_Renewable")
                        .HasColumnType("varchar")
                        .HasColumnName("No_Renewable");

                    b.Property<string>("OperationSensitivity")
                        .HasColumnType("varchar")
                        .HasColumnName("OperationSensitivity");

                    b.Property<string>("Operation_Work")
                        .HasColumnType("varchar")
                        .HasColumnName("Operation_Work");

                    b.Property<string>("Predictive")
                        .HasColumnType("varchar")
                        .HasColumnName("Predictive");

                    b.Property<string>("PredictiveOperation")
                        .HasColumnType("varchar")
                        .HasColumnName("PredictiveOperation");

                    b.Property<string>("Preventive")
                        .HasColumnType("varchar")
                        .HasColumnName("Preventive");

                    b.Property<string>("Process")
                        .HasColumnType("varchar")
                        .HasColumnName("Process");

                    b.Property<string>("Renewable")
                        .HasColumnType("varchar")
                        .HasColumnName("Renewable");

                    b.Property<string>("SkillLevels")
                        .HasColumnType("varchar")
                        .HasColumnName("SkillLevels");

                    b.Property<string>("Solubility")
                        .HasColumnType("varchar")
                        .HasColumnName("Solubility");

                    b.Property<string>("Technology")
                        .HasColumnType("varchar")
                        .HasColumnName("Technology");

                    b.Property<string>("TechnologyDataCollection")
                        .HasColumnType("varchar")
                        .HasColumnName("TechnologyDataCollection");

                    b.Property<string>("Toxicity")
                        .HasColumnType("varchar")
                        .HasColumnName("Toxicity");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("WorkLoad")
                        .HasColumnType("varchar")
                        .HasColumnName("WorkLoad");

                    b.HasKey("Id")
                        .HasName("pk_criticalityIndex");

                    b.ToTable("CriticalityIndex", (string)null);
                });

            modelBuilder.Entity("Application.Models.Heating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AirType")
                        .HasColumnType("varchar")
                        .HasColumnName("AirType");

                    b.Property<string>("Fluid")
                        .HasColumnType("varchar")
                        .HasColumnName("Fluid");

                    b.Property<string>("Heat")
                        .HasColumnType("varchar")
                        .HasColumnName("Heat");

                    b.Property<string>("HeatingValue")
                        .HasColumnType("varchar")
                        .HasColumnName("HeatingValue");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Inspection")
                        .HasColumnType("varchar")
                        .HasColumnName("Inspection");

                    b.Property<string>("Isolation")
                        .HasColumnType("varchar")
                        .HasColumnName("Isolation");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Performance")
                        .HasColumnType("varchar")
                        .HasColumnName("Performance");

                    b.Property<string>("Place")
                        .HasColumnType("varchar")
                        .HasColumnName("Place");

                    b.Property<string>("Temperature")
                        .HasColumnType("varchar")
                        .HasColumnName("Temperature");

                    b.Property<string>("Thermodynamics")
                        .HasColumnType("varchar")
                        .HasColumnName("Thermodynamics");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Use")
                        .HasColumnType("varchar")
                        .HasColumnName("Use");

                    b.HasKey("Id")
                        .HasName("pk_heating");

                    b.ToTable("Heating", (string)null);
                });

            modelBuilder.Entity("Application.Models.LightingSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cleaning")
                        .HasColumnType("varchar")
                        .HasColumnName("Cleaning");

                    b.Property<string>("ConstructionStructure")
                        .HasColumnType("varchar")
                        .HasColumnName("ConstructionStructure");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("LightingSystemValue")
                        .HasColumnType("varchar")
                        .HasColumnName("LightingSystemValue");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Operation")
                        .HasColumnType("varchar")
                        .HasColumnName("Operation");

                    b.Property<string>("Performance")
                        .HasColumnType("varchar")
                        .HasColumnName("Performance");

                    b.Property<string>("Reactor")
                        .HasColumnType("varchar")
                        .HasColumnName("Reactor");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id")
                        .HasName("pk_lightingSystem");

                    b.ToTable("LightingSystem", (string)null);
                });

            modelBuilder.Entity("Application.Models.MechanicalTreatment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BiologicalTreatment")
                        .HasColumnType("varchar")
                        .HasColumnName("BiologicalTreatment");

                    b.Property<string>("CCWE")
                        .HasColumnType("varchar")
                        .HasColumnName("CCWE");

                    b.Property<string>("Chemistry")
                        .HasColumnType("varchar")
                        .HasColumnName("Chemistry");

                    b.Property<string>("Chlorination")
                        .HasColumnType("varchar")
                        .HasColumnName("Chlorination");

                    b.Property<string>("Conversion")
                        .HasColumnType("varchar")
                        .HasColumnName("Conversion");

                    b.Property<string>("CycloneSeparation")
                        .HasColumnType("varchar")
                        .HasColumnName("CycloneSeparation");

                    b.Property<string>("DecreasedContaminationOfTreatmentWater")
                        .HasColumnType("varchar")
                        .HasColumnName("DecreasedContaminationOfTreatmentWater");

                    b.Property<string>("DistillerUse")
                        .HasColumnType("varchar")
                        .HasColumnName("DistillerUse");

                    b.Property<string>("EliminationOfLeaksInWaterLinesAndValves")
                        .HasColumnType("varchar")
                        .HasColumnName("EliminationOfLeaksInWaterLinesAndValves");

                    b.Property<string>("Equipment")
                        .HasColumnType("varchar")
                        .HasColumnName("Equipment");

                    b.Property<string>("Equipments")
                        .HasColumnType("varchar")
                        .HasColumnName("Equipments");

                    b.Property<string>("Evaporator")
                        .HasColumnType("varchar")
                        .HasColumnName("Evaporator");

                    b.Property<string>("ImprovedProductionOfDeionizedWater")
                        .HasColumnType("varchar")
                        .HasColumnName("ImprovedProductionOfDeionizedWater");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("MaterialConcentration")
                        .HasColumnType("varchar")
                        .HasColumnName("MaterialConcentration");

                    b.Property<string>("MechanicalTreatmentValue")
                        .HasColumnType("varchar")
                        .HasColumnName("MechanicalTreatmentValue");

                    b.Property<string>("MinimalUseOfCoolingWater")
                        .HasColumnType("varchar")
                        .HasColumnName("MinimalUseOfCoolingWater");

                    b.Property<string>("Neutralization")
                        .HasColumnType("varchar")
                        .HasColumnName("Neutralization");

                    b.Property<string>("OtherMethods")
                        .HasColumnType("varchar")
                        .HasColumnName("OtherMethods");

                    b.Property<string>("PH")
                        .HasColumnType("varchar")
                        .HasColumnName("PH");

                    b.Property<string>("Physicist")
                        .HasColumnType("varchar")
                        .HasColumnName("Physicist");

                    b.Property<string>("PostGenerationTreatment")
                        .HasColumnType("varchar")
                        .HasColumnName("PostGenerationTreatment");

                    b.Property<string>("Quality")
                        .HasColumnType("varchar")
                        .HasColumnName("Quality");

                    b.Property<string>("QuantificationOfWaterUse")
                        .HasColumnType("varchar")
                        .HasColumnName("QuantificationOfWaterUse");

                    b.Property<string>("Recover")
                        .HasColumnType("varchar")
                        .HasColumnName("Recover");

                    b.Property<string>("RecoveryAndReuseOfCoolingWater")
                        .HasColumnType("varchar")
                        .HasColumnName("RecoveryAndReuseOfCoolingWater");

                    b.Property<string>("RecoveryOfMetalsFromWater")
                        .HasColumnType("varchar")
                        .HasColumnName("RecoveryOfMetalsFromWater");

                    b.Property<string>("RecycledWaterMeasurementToReduceSewageFees")
                        .HasColumnType("varchar")
                        .HasColumnName("RecycledWaterMeasurementToReduceSewageFees");

                    b.Property<string>("RecyclingOfChlorinatedWater")
                        .HasColumnType("varchar")
                        .HasColumnName("RecyclingOfChlorinatedWater");

                    b.Property<string>("Redox")
                        .HasColumnType("varchar")
                        .HasColumnName("Redox");

                    b.Property<string>("Reduction")
                        .HasColumnType("varchar")
                        .HasColumnName("Reduction");

                    b.Property<string>("ReductionInWaterUse")
                        .HasColumnType("varchar")
                        .HasColumnName("ReductionInWaterUse");

                    b.Property<string>("RegularCleaningOfDirtOnProductionLinesThatUseWater")
                        .HasColumnType("varchar")
                        .HasColumnName("RegularCleaningOfDirtOnProductionLinesThatUseWater");

                    b.Property<string>("RemovalOfContaminants")
                        .HasColumnType("varchar")
                        .HasColumnName("RemovalOfContaminants");

                    b.Property<string>("ReplacementOfChlorineByO2")
                        .HasColumnType("varchar")
                        .HasColumnName("ReplacementOfChlorineByO2");

                    b.Property<string>("ReplacementOfCoolingWaterInIndustry")
                        .HasColumnType("varchar")
                        .HasColumnName("ReplacementOfCoolingWaterInIndustry");

                    b.Property<string>("ReplacementOfTreatedWaterWithWellWater")
                        .HasColumnType("varchar")
                        .HasColumnName("ReplacementOfTreatedWaterWithWellWater");

                    b.Property<string>("ReplacementOfWaterCoolingInProcesses")
                        .HasColumnType("varchar")
                        .HasColumnName("ReplacementOfWaterCoolingInProcesses");

                    b.Property<string>("ReplacementOfWaterRegretInProcesses")
                        .HasColumnType("varchar")
                        .HasColumnName("ReplacementOfWaterRegretInProcesses");

                    b.Property<string>("ReverseOsmosis")
                        .HasColumnType("varchar")
                        .HasColumnName("ReverseOsmosis");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Use")
                        .HasColumnType("varchar")
                        .HasColumnName("Use");

                    b.Property<string>("UseOfAbsorption")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfAbsorption");

                    b.Property<string>("UseOfAdsorption")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfAdsorption");

                    b.Property<string>("UseOfClosedProcessInTheProductionOfWasteWater")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfClosedProcessInTheProductionOfWasteWater");

                    b.Property<string>("UseOfCountercurrentRinsing")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfCountercurrentRinsing");

                    b.Property<string>("UseOfDecanter")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfDecanter");

                    b.Property<string>("UseOfDeionizedWater")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfDeionizedWater");

                    b.Property<string>("UseOfFiltering")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfFiltering");

                    b.Property<string>("UseOfMagneticSieve")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfMagneticSieve");

                    b.Property<string>("UseOfValvesToControlEquipmentFlow")
                        .HasColumnType("varchar")
                        .HasColumnName("UseOfValvesToControlEquipmentFlow");

                    b.Property<string>("UseTheChlorinationWashWater")
                        .HasColumnType("varchar")
                        .HasColumnName("UseTheChlorinationWashWater");

                    b.Property<string>("UsingChlorineInTheGasPhase")
                        .HasColumnType("varchar")
                        .HasColumnName("UsingChlorineInTheGasPhase");

                    b.Property<string>("Utility")
                        .HasColumnType("varchar")
                        .HasColumnName("Utility");

                    b.Property<string>("WT")
                        .HasColumnType("varchar")
                        .HasColumnName("WT");

                    b.Property<string>("WaterDevelopment")
                        .HasColumnType("varchar")
                        .HasColumnName("WaterDevelopment");

                    b.Property<string>("WaterLevelControlInEquipment")
                        .HasColumnType("varchar")
                        .HasColumnName("WaterLevelControlInEquipment");

                    b.Property<string>("WaterTreatmentAndReuse")
                        .HasColumnType("varchar")
                        .HasColumnName("WaterTreatmentAndReuse");

                    b.Property<string>("WaterTreatmentByMagneticTechnology")
                        .HasColumnType("varchar")
                        .HasColumnName("WaterTreatmentByMagneticTechnology");

                    b.Property<string>("WaterUse")
                        .HasColumnType("varchar")
                        .HasColumnName("WaterUse");

                    b.HasKey("Id")
                        .HasName("pk_mechanicalTreatment");

                    b.ToTable("MechanicalTreatment", (string)null);
                });

            modelBuilder.Entity("Application.Models.Motor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cleaning")
                        .HasColumnType("varchar")
                        .HasColumnName("Cleaning");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Maintenance")
                        .HasColumnType("varchar")
                        .HasColumnName("Maintenance");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Moisture")
                        .HasColumnType("varchar")
                        .HasColumnName("Moisture");

                    b.Property<string>("MotorValue")
                        .HasColumnType("varchar")
                        .HasColumnName("MotorValue");

                    b.Property<string>("Noise")
                        .HasColumnType("varchar")
                        .HasColumnName("Noise");

                    b.Property<string>("Operation")
                        .HasColumnType("varchar")
                        .HasColumnName("Operation");

                    b.Property<string>("Performance")
                        .HasColumnType("varchar")
                        .HasColumnName("Performance");

                    b.Property<string>("Temperature")
                        .HasColumnType("varchar")
                        .HasColumnName("Temperature");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Ventilation")
                        .HasColumnType("varchar")
                        .HasColumnName("Ventilation");

                    b.HasKey("Id")
                        .HasName("pk_motor");

                    b.ToTable("Motor", (string)null);
                });

            modelBuilder.Entity("Application.Models.Ventilation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AirRecycling")
                        .HasColumnType("varchar")
                        .HasColumnName("AirRecycling");

                    b.Property<string>("AirReduction")
                        .HasColumnType("varchar")
                        .HasColumnName("AirReduction");

                    b.Property<string>("FanControl")
                        .HasColumnType("varchar")
                        .HasColumnName("FanControl");

                    b.Property<string>("Functionality")
                        .HasColumnType("varchar")
                        .HasColumnName("Functionality");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("Management")
                        .HasColumnType("varchar")
                        .HasColumnName("Management");

                    b.Property<string>("Performance")
                        .HasColumnType("varchar")
                        .HasColumnName("Performance");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Use")
                        .HasColumnType("varchar")
                        .HasColumnName("Use");

                    b.Property<string>("VentilationValue")
                        .HasColumnType("varchar")
                        .HasColumnName("VentilationValue");

                    b.HasKey("Id")
                        .HasName("pk_ventilation");

                    b.ToTable("Ventilation", (string)null);
                });

            modelBuilder.Entity("Application.Models.WasteEnergyUse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int8")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ChemicalTreatment")
                        .HasColumnType("varchar")
                        .HasColumnName("ChemicalTreatment");

                    b.Property<string>("IndustrialSector")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustrialSector");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("IndustryName");

                    b.Property<string>("MechanicalTreatment")
                        .HasColumnType("varchar")
                        .HasColumnName("MechanicalTreatment");

                    b.Property<DateTime>("Ultima_Atualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(0) without time zone")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("WasteEnergyUseValue")
                        .HasColumnType("varchar")
                        .HasColumnName("WasteEnergyUseValue");

                    b.HasKey("Id")
                        .HasName("pk_wasteEnergyUse");

                    b.ToTable("WasteEnergyUse", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
